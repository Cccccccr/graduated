[{"E:\\大四上\\react\\react-demo\\src\\App.js":"1","E:\\大四上\\react\\react-demo\\src\\reportWebVitals.js":"2","E:\\大四上\\react\\react-demo\\src\\services\\index.js":"3","E:\\大四上\\react\\react-demo\\src\\compon\\post_list.js":"4","E:\\大四上\\react\\react-demo\\src\\components\\Item\\index.jsx":"5","E:\\大四上\\react\\react-demo\\src\\components\\Footer\\index.jsx":"6","E:\\大四上\\react\\react-demo\\src\\components\\List\\index.jsx":"7","E:\\大四上\\react\\react-demo\\src\\components\\Header\\index.jsx":"8","E:\\大四上\\react\\react-demo\\src\\pages\\Home\\index.jsx":"9","E:\\大四上\\react\\react-demo\\src\\pages\\About\\index.jsx":"10","E:\\大四上\\react\\react-demo\\src\\router\\PrivateRoute\\index.jsx":"11","E:\\大四上\\react\\react-demo\\src\\router\\index.jsx":"12","E:\\大四上\\react\\react-demo\\src\\router\\compile-component\\index.jsx":"13","E:\\大四上\\react\\react-demo\\src\\redux\\store.js":"14","E:\\大四上\\react\\react-demo\\src\\index.jsx":"15","E:\\大四上\\react\\react-demo\\src\\redux\\reducers\\index.js":"16","E:\\大四上\\react\\react-demo\\src\\redux\\reducers\\post_reducer.js":"17","E:\\大四上\\react\\react-demo\\src\\pages\\Lazy\\index.jsx":"18","E:\\大四上\\react\\react-demo\\src\\router\\lazy.jsx":"19","E:\\大四上\\react\\react-demo\\src\\router\\PrivateRoute\\lazy.jsx":"20","E:\\大四上\\react\\react-demo\\src\\router\\compile-component\\lazy.jsx":"21","E:\\大四上\\react\\react-demo\\src\\router\\router.js":"22","E:\\大四上\\react\\react-demo\\src\\pages\\Markdown\\index.jsx":"23","E:\\大四上\\react\\react-demo\\src\\router\\routeUtil.js":"24","E:\\大四上\\react\\react-demo\\src\\pages\\Login\\index.jsx":"25","E:\\大四上\\react\\react-demo\\src\\redux\\reducers\\user.js":"26","E:\\大四上\\react\\react-demo\\src\\redux\\actions\\user.js":"27","E:\\大四上\\react\\react-demo\\src\\redux\\actions\\post_action.js":"28","E:\\大四上\\react\\react-demo\\src\\pages\\user\\index.jsx":"29","E:\\大四上\\react\\react-demo\\src\\pages\\User\\index.jsx":"30","E:\\大四上\\react\\react-demo\\src\\pages\\admin\\Login\\index.jsx":"31","E:\\大四上\\react\\react-demo\\src\\pages\\admin\\Home\\index.jsx":"32","E:\\大四上\\react\\react-demo\\src\\redux\\reducers\\admin.js":"33","E:\\大四上\\react\\react-demo\\src\\redux\\actions\\admin.js":"34","E:\\大四上\\react\\react-demo\\src\\router\\adminRoles.js":"35","E:\\大四上\\react\\react-demo\\src\\router\\AbstractRouter.jsx":"36","E:\\大四上\\react\\react-demo\\src\\pages\\Markdown\\Interpreter\\index.jsx":"37","E:\\大四上\\react\\react-demo\\src\\pages\\Markdown\\Interpreter\\transformText.js":"38","E:\\大四上\\react\\react-demo\\src\\pages\\Markdown\\Interpreter\\util.js":"39","E:\\大四上\\react\\react-demo\\src\\pages\\Home\\Header\\index.jsx":"40","E:\\大四上\\react\\react-demo\\src\\pages\\Home\\Header\\search.jsx":"41"},{"size":985,"mtime":1614167103705,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":1608539637258,"results":"44","hashOfConfig":"45"},{"size":154,"mtime":1611331109232,"results":"46","hashOfConfig":"45"},{"size":835,"mtime":1617199479758,"results":"47","hashOfConfig":"45"},{"size":992,"mtime":1612499451972,"results":"48","hashOfConfig":"49"},{"size":1000,"mtime":1612496798939,"results":"50","hashOfConfig":"43"},{"size":543,"mtime":1612357865210,"results":"51","hashOfConfig":"49"},{"size":1407,"mtime":1612357265303,"results":"52","hashOfConfig":"49"},{"size":834,"mtime":1619552876479,"results":"53","hashOfConfig":"45"},{"size":531,"mtime":1617682093191,"results":"54","hashOfConfig":"45"},{"size":1297,"mtime":1614332371879,"results":"55","hashOfConfig":"43"},{"size":1735,"mtime":1614334092660,"results":"56","hashOfConfig":"43"},{"size":575,"mtime":1614332410854,"results":"57","hashOfConfig":"43"},{"size":374,"mtime":1617201327768,"results":"58","hashOfConfig":"45"},{"size":766,"mtime":1617175819455,"results":"59","hashOfConfig":"45"},{"size":186,"mtime":1617682372572,"results":"60","hashOfConfig":"45"},{"size":389,"mtime":1617682275605,"results":"61","hashOfConfig":"45"},{"size":579,"mtime":1617932695207,"results":"62","hashOfConfig":"45"},{"size":1869,"mtime":1617938632293,"results":"63","hashOfConfig":"45"},{"size":4505,"mtime":1617939952044,"results":"64","hashOfConfig":"45"},{"size":742,"mtime":1617330585072,"results":"65","hashOfConfig":"45"},{"size":3830,"mtime":1617940146895,"results":"66","hashOfConfig":"45"},{"size":1040,"mtime":1617873099144,"results":"67","hashOfConfig":"45"},{"size":429,"mtime":1617177225112,"results":"68","hashOfConfig":"45"},{"size":4209,"mtime":1617766580776,"results":"69","hashOfConfig":"45"},{"size":714,"mtime":1617244406199,"results":"70","hashOfConfig":"45"},{"size":407,"mtime":1617268125842,"results":"71","hashOfConfig":"45"},{"size":229,"mtime":1614305383473,"results":"72","hashOfConfig":"45"},{"size":393,"mtime":1617242521637,"results":"73","hashOfConfig":"45"},{"size":672,"mtime":1617682096745,"results":"74","hashOfConfig":"45"},{"size":4723,"mtime":1617715773413,"results":"75","hashOfConfig":"45"},{"size":567,"mtime":1617717787869,"results":"76","hashOfConfig":"45"},{"size":643,"mtime":1617265393349,"results":"77","hashOfConfig":"45"},{"size":471,"mtime":1617703357172,"results":"78","hashOfConfig":"45"},{"size":276,"mtime":1617681868656,"results":"79","hashOfConfig":"45"},{"size":314,"mtime":1617331076164,"results":"80","hashOfConfig":"45"},{"size":2835,"mtime":1618331956219,"results":"81","hashOfConfig":"45"},{"size":11515,"mtime":1619145499733,"results":"82","hashOfConfig":"45"},{"size":5504,"mtime":1618285683765,"results":"83","hashOfConfig":"45"},{"size":1551,"mtime":1619920860414,"results":"84","hashOfConfig":"45"},{"size":1588,"mtime":1619925063135,"results":"85","hashOfConfig":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"c9zkwk",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1ca05dj",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h55b1i",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\大四上\\react\\react-demo\\src\\App.js",["182","183","184","185","186","187","188","189","190"],"import React, { Component } from \"react\";\nimport {\n  Link,\n  Route,\n  Redirect,\n  Switch,\n  NavLink,\n  withRouter,\n  BrowserRouter,\n} from \"react-router-dom\";\n// import { qs } from \"querystring\";\nimport \"./App.css\";\n\nimport PrivateRoute from \"./router/PrivateRoute\";\nimport Router from \"./router\";\n\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          {/* <Switch>\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/home\" component={Home} />\n              <PrivateRoute path=\"/private\" component={Home} />\n              <Redirect to=\"/about\">redirect about</Redirect>\n            </Switch> */}\n          {/* <PrivateRoute path=\"/private\" component={Home} /> */}\n        </div>\n        <div>\n          <BrowserRouter>\n            <Router />\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",["191","192"],"E:\\大四上\\react\\react-demo\\src\\reportWebVitals.js",[],["193","194"],"E:\\大四上\\react\\react-demo\\src\\services\\index.js",[],["195","196"],"E:\\大四上\\react\\react-demo\\src\\compon\\post_list.js",[],"E:\\大四上\\react\\react-demo\\src\\components\\Item\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\components\\Footer\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\components\\List\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\components\\Header\\index.jsx",["197"],"import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { nanoid } from 'nanoid';\n\nclass Header extends Component {\n    static propTypes = {\n        addTodos: PropTypes.func.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        if(props.setState) {\n            this.setState = props.setState;\n        }\n    }\n\n    // componentDidMount() {\n    //     let { state, setState } = this.props;\n    //     setState({...state, todos: [...state.todos, { id: '004', name: '自己实现修改父组件state', done: true }]})\n    // }\n\n    handleKeyUp = event => {\n        if(event.keyCode !== 13) return;\n        const value = event.target.value;\n        if(value) {\n            const { state, addTodos } = this.props;\n            const todo = { id: nanoid(), name: value, done: false }\n            const newTodos = [\n                ...state.todos,\n                todo\n            ];\n            // 通过setState透传的方式\n            // this.setState({...state, todos: newTodos});\n\n            // 通过传递函数，执行函数的方式\n            addTodos(todo);\n            event.target.value = '';\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <input onKeyUp={this.handleKeyUp} type=\"text\" placeholder=\"请输入你的任务名称，按回车键确认\"/>\n            </div>\n        );\n    }\n}\n\nexport default Header;",["198","199"],"E:\\大四上\\react\\react-demo\\src\\pages\\Home\\index.jsx",["200","201","202"],"import React, { Component } from 'react';\nimport Herader from './Header';\nimport Login from '../Login';\nimport Markdown from '../Markdown';\nimport { Button } from 'antd';\n\nimport './index.less';\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.loginRef = React.createRef();\n    this.state = {\n      value: '',\n    };\n  }\n\n  btnClick = () => {\n    this.loginRef.current.handleShow(true);\n  };\n\n  handleChange(value) {\n    this.setState({\n      value,\n    });\n  }\n\n  render() {\n    const {  routes = false } = this.props;\n    return (\n      <div className=\"USER-HOME\">\n        <Herader />\n        {/* <Button onClick={this.btnClick}>click</Button> */}\n        {routes && routes}\n        {/* <Login ref={this.loginRef} /> */}\n        {/* <Markdown /> */}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","E:\\大四上\\react\\react-demo\\src\\pages\\About\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\router\\PrivateRoute\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\router\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\router\\compile-component\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\redux\\store.js",[],"E:\\大四上\\react\\react-demo\\src\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\redux\\reducers\\index.js",[],"E:\\大四上\\react\\react-demo\\src\\redux\\reducers\\post_reducer.js",[],"E:\\大四上\\react\\react-demo\\src\\pages\\Lazy\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\router\\lazy.jsx",[],"E:\\大四上\\react\\react-demo\\src\\router\\PrivateRoute\\lazy.jsx",[],"E:\\大四上\\react\\react-demo\\src\\router\\compile-component\\lazy.jsx",[],"E:\\大四上\\react\\react-demo\\src\\router\\router.js",["203"],"// needUserLogin: 需要用户登录态\n// adminRole: 需要的管理员权限\nimport { adminRole, adminRoleArr } from './adminRoles';\n\nconst adminRouter = [\n  {\n    path: '/admin',\n    redirect: '/admin/home',\n  },\n  {\n    path: '/admin/login',\n    loader: () => import('@/pages/admin/Login'),\n  },\n  {\n    path: '/admin/home',\n    loader: () => import('@/pages/admin/Home'),\n    routerConfig: {\n      adminRoles: [...adminRoleArr],\n    },\n  },\n  {\n    path: '/admin/unreachable',\n    loader: () => import('@/pages/admin/Login'),\n    routerConfig: {\n      adminRoles: [],\n    },\n  },\n]\n\nconst router = [\n  {\n    path: '/',\n    exact: true,\n    redirect: '/home',\n  },\n  {\n    path: '/login',\n    loader: () => import('@/pages/Login'),\n    routerConfig: {\n      needUserLogin: false,\n    },\n  },\n  {\n    path: '/user',\n    loader: () => import('@/pages/User'),\n    routerConfig: {\n      needUserLogin: true,\n    },\n    childRoutes: [\n      {\n        path: '/user/article',\n        loader: () => import('@/pages/Login'),\n        routerConfig: {\n          needUserLogin: true,\n        },\n      },\n    ],\n  },\n  {\n    path: '/home',\n    loader: () => import('@/pages/Home'),\n    childRoutes: [\n      {\n        path: '/home/login',\n        loader: () => import('@/pages/Login'),\n      },\n      {\n        path: '/home/next',\n        loader: () => import('@/pages/Lazy'),\n        childRoutes: [\n          {\n            path: '/home/next/abc',\n            loader: () => import('@/pages/About'),\n          },\n        ],\n      },\n    ],\n  },\n  ...adminRouter\n];\nconst { routerArr: normalRouter, redirectArr: redirectRouter } = handleRouter(\n  router\n);\n\nexport { normalRouter, redirectRouter };\nexport default router;\n\nfunction handleRouter(router) {\n  const routerArr = [],\n    redirectArr = [];\n  // 第四个参数是标识对childRoutes进行遍历\n  handleRouterArr(router, routerArr, redirectArr);\n  console.log(routerArr, redirectArr);\n  return { routerArr, redirectArr };\n}\n\n// 如果判断到时childRoutes时进行\nfunction handleRouterArr(router, targetRouter, redirectArr) {\n  router.forEach(item => {\n    if (item.redirect && !item.exact) {\n      // console.log('redirect', item);\n      // 是重定向的放到重定向数组中（把exact当正常的路由进行处理）\n      redirectArr.push(item);\n      if (item.childRoutes) {\n        // 如果有子路由，对子路由进行遍历\n        item.childRoutes.forEach(childitem => {\n          if (childitem.redirect) {\n            // 如果子路由还是重定向，把它加入到重定向数组\n            redirectArr.push(childitem);\n          } else {\n            // 不是重定向，把路由路径加到重定向路由的同层级\n            targetRouter.push(childitem);\n          }\n          // 如果子路由有childRoutes进行handleRouterArr操作\n          if (childitem.childRoutes) {\n            handleRouterArr(childitem.childRoutes, targetRouter, redirectArr);\n          }\n        });\n        // 不删除更好，以后获取的router还是完整的结构\n        // 如果是redirect，删除此属性\n        // if (item.redirect) {\n        //   delete item.childRoutes;\n        // }\n      }\n    } else {\n      // console.log('unredirect', item);\n      // 如果不是重定向路由，push到targetRouter中\n      // 先进行判断targetRouter中有没有相同的元素，有的话不进行push, ===地址级别的判断\n      let flag = false;\n      for (let i = 0; i < targetRouter.length; i++) {\n        if (targetRouter[i] === item) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        targetRouter.push(item);\n      }\n      // 如果存在childRoutes进行handleRouterArr操作\n      if (item.childRoutes) {\n        handleRouterArr(item.childRoutes, item.childRoutes, redirectArr);\n      }\n    }\n  });\n}\n","E:\\大四上\\react\\react-demo\\src\\pages\\Markdown\\index.jsx",["204"],"import React, { Component } from 'react';\nimport Editor from 'react-markdown-editor-lite';\nimport ReactMarkdown from 'react-markdown';\nimport Interpreter from './Interpreter'\nimport 'react-markdown-editor-lite/lib/index.css';\n\nclass MarkDown extends Component {\n  constructor(props) {\n    super(props);\n    this.mdEditor = React.createRef();\n    this.state = {};\n  }\n\n  handleClick = () => {\n    if (this.mdEditor.current) {\n      alert(this.mdEditor.current.getMdValue());\n    }\n  };\n\n  handleEditorChange = ({html, text}) => {\n    // console.log(typeof html);\n    // console.log(html, text);\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleClick}>Get value</button>\n        <Editor\n          ref={this.mdEditor}\n          style={{\n            height: '100%',\n          }}\n          renderHTML={text => <Interpreter source={text} />}\n          // renderHTML={text => <ReactMarkdown source={text} />}\n          onChange={this.handleEditorChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MarkDown;\n","E:\\大四上\\react\\react-demo\\src\\router\\routeUtil.js",[],"E:\\大四上\\react\\react-demo\\src\\pages\\Login\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\redux\\reducers\\user.js",[],"E:\\大四上\\react\\react-demo\\src\\redux\\actions\\user.js",[],"E:\\大四上\\react\\react-demo\\src\\redux\\actions\\post_action.js",[],"E:\\大四上\\react\\react-demo\\src\\pages\\user\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\pages\\User\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\pages\\admin\\Login\\index.jsx",["205"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { adminRoleArr, adminRole } from '@router/adminRoles';\r\nimport { Select, Button, Input } from 'antd';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport './index.less';\r\n\r\nimport AdminAction from '@actions/admin';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    post: state.post,\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { dispatch, ...AdminAction };\r\n}\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    login: true,\r\n    account: '',\r\n    password: '',\r\n    role: adminRoleArr[0].value,\r\n    size: 'large',\r\n  };\r\n\r\n  async componentDidMount() {}\r\n\r\n  onChange = (event, type) => {\r\n    const { value } = event.target;\r\n    const handle = {\r\n      account: () => {\r\n        this.setState({ account: value });\r\n      },\r\n      password: () => {\r\n        this.setState({ password: value });\r\n      },\r\n    };\r\n    if (type && handle[type]) {\r\n      handle[type]();\r\n    }\r\n  };\r\n\r\n  opearteChange = () => {\r\n    this.setState({ login: !this.state.login, account: '', password: '' });\r\n  };\r\n\r\n  comfirm = async () => {\r\n    if (!this.checkData()) {\r\n      return;\r\n    }\r\n    const { account, password, login, role } = this.state;\r\n    let data = {\r\n      account,\r\n      password,\r\n    };\r\n    const requestUrl = login ? 'admin/login' : 'admin/apply';\r\n    if (!login) {\r\n      const now = new Date();\r\n      data = { role, createDate: now.valueOf(), ...data };\r\n    }\r\n    try {\r\n      const result = await this.axios.post(requestUrl, data);\r\n      const respondData = result.data;\r\n      if (respondData.succ === false) {\r\n        this.$message.warning(respondData.msg);\r\n      } else {\r\n        this.$message.success(`${login ? '登录' : '申请'}成功`);\r\n        if (login) {\r\n          await this.props.dispatch(AdminAction.initAdminData(respondData));\r\n          console.log(this.$history);\r\n          this.$history.push('/admin/home');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.$message.error(`${login ? '登录' : '申请'}失败`);\r\n    }\r\n  };\r\n\r\n  checkData = () => {\r\n    const { account, password } = this.state;\r\n    if (!account) {\r\n      this.$message.warning('请输入账号');\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      this.$message.warning('密码不能为空');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleSelectChange = value => {\r\n    console.log(value);\r\n    this.setState({ role: value });\r\n  };\r\n\r\n  render() {\r\n    console.log('admin login render');\r\n    let state = this.state;\r\n    let { login, size, account, password } = state;\r\n    return (\r\n      <div className=\"AdminLogin\">\r\n        <div className=\"background\"></div>\r\n        <div className=\"main\">\r\n          <h3 className=\"title\">管理员{login ? '登录' : '申请'}</h3>\r\n          <Input\r\n            placeholder=\"请输入账号\"\r\n            allowClear\r\n            onChange={e => {\r\n              this.onChange(e, 'account');\r\n            }}\r\n            value={account}\r\n            size={size}\r\n            className=\"input-item\"\r\n          />\r\n          <Input.Password\r\n            placeholder=\"密码\"\r\n            iconRender={visible =>\r\n              visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n            }\r\n            onChange={e => {\r\n              this.onChange(e, 'password');\r\n            }}\r\n            size={size}\r\n            className=\"input-item\"\r\n            value={password}\r\n          />\r\n          {!login && (\r\n            <Select\r\n              defaultValue={adminRoleArr[0].value}\r\n              className=\"select-main\"\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              {adminRoleArr.map(item => {\r\n                return (\r\n                  <Option value={item.value} key={item.name + item.value}>\r\n                    {item.name}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n          <Button\r\n            className=\"operate-type\"\r\n            type=\"link\"\r\n            size={size}\r\n            onClick={this.opearteChange}\r\n          >\r\n            {login ? '申请' : '登录'}\r\n          </Button>\r\n          <Button\r\n            className=\"comfirm-btn\"\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size={size}\r\n            block\r\n            onClick={this.comfirm}\r\n          >\r\n            {login ? '登录' : '申请'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\r\n  forwardRef: true,\r\n})(Login);\r\n","E:\\大四上\\react\\react-demo\\src\\pages\\admin\\Home\\index.jsx",[],"E:\\大四上\\react\\react-demo\\src\\redux\\reducers\\admin.js",[],"E:\\大四上\\react\\react-demo\\src\\redux\\actions\\admin.js",[],"E:\\大四上\\react\\react-demo\\src\\router\\adminRoles.js",[],"E:\\大四上\\react\\react-demo\\src\\router\\AbstractRouter.jsx",[],["206","207"],"E:\\大四上\\react\\react-demo\\src\\pages\\Markdown\\Interpreter\\index.jsx",["208","209","210","211","212","213","214"],"import React, { Component } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { transformText } from './transformText';\r\nimport Lazy from '../../Lazy';\r\n\r\nclass Interpreter extends Component {\r\n  render() {\r\n    const { source } = this.props;\r\n    // console.log(this.props.source);\r\n    transformText(source);\r\n    return (\r\n      <>\r\n        {/* {Root(SimpleRenderer().props)} */}\r\n        <div>{SimpleRenderer()}</div>\r\n        <p>{\"&nbsp;&nbsp;nide\" + \"\\n\" + \"\\*\"}</p>\r\n        <div>分割线----------------</div>\r\n        <div>{this.props.source}</div>\r\n        <div>分割线----------------</div>\r\n        <ReactMarkdown source={source} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interpreter;\r\n\r\nfunction Root(props) {\r\n  const { className } = props;\r\n  return className\r\n    ? React.createElement('div', { className }, props.children)\r\n    : React.createElement(React.Fragment, {}, props.children);\r\n}\r\n\r\n// 文本渲染\r\nclass Text extends Component {\r\n  render() {\r\n    return this.props.children || '';\r\n  }\r\n}\r\nfunction TextRenderer(props) {\r\n  return props.children || '';\r\n}\r\n\r\nfunction SimpleRenderer() {\r\n  // return React.createElement(\r\n  //   Lazy,\r\n  //   { data: 'I am props data' },\r\n  //   React.createElement('p', null, [\r\n  //     React.createElement(Text, null, '我是text文本'),\r\n  //     React.createElement('br'),\r\n  //     React.createElement('em', null, '我是斜体文本'),\r\n  //   ]),\r\n  //   React.createElement(Text, null, '我是text文本'),\r\n  //   React.createElement('br'),\r\n  //   React.createElement('em', null, '我是斜体文本'),\r\n  //   React.createElement('li', null, '我是li')\r\n  // );\r\n  return React.createElement(\r\n    'p',\r\n    null,\r\n    React.createElement(React.Fragment, null, '()\\nwode'),\r\n    React.createElement(React.Fragment, null, '')\r\n  );\r\n}\r\n\r\n// 存储分行以后每一行得出的type数据结构，此时只区分以下type类型\r\n// p：text文本 下面的全部没有匹配上才算是text done\r\n// h1 - h6 done\r\n// code：属性中有beginTag，用于去匹配下一个endTag，还有language（标识用的语言）done\r\n// ul：无需列表，子元素为li done\r\n// ol：有序列表，子元素为li done\r\n// table：第一行为表头 done\r\n// 引用：> done\r\n// img：图片标签 可以当做行内元素去检测 done\r\n// 链接：[]() done\r\n// spaceCode：前面有四个空格的code代码块 done\r\n// ---：分割线，前面必须为空行 done\r\n// blank空行：>=0空格 done\r\n\r\n\r\n\r\n/*\r\ntext下不能有INLINE_CODE\r\nINLINE_CODE前必须为空元素或者空行\r\n连个spaceCode中间的blank都是br\r\n */\r\n\r\n/* \r\ntext的规则要把整个text连成一块来进行判断，不能在text+text过程中直接加\r\nbr元素，而是通过判断/\\s{2,}\\/n/来判断，\r\n判断br元素的优先级低于code image em\r\n*/\r\n","E:\\大四上\\react\\react-demo\\src\\pages\\Markdown\\Interpreter\\transformText.js",["215","216","217","218"],"import { getNode, trim } from './util';\r\n// 标识进行到第几行了\r\nconst FLAG_INDEX = { index: 0 };\r\n\r\nfunction transformText(text) {\r\n  // console.log(text);\r\n  const sourceRow = text.split(/\\n/);\r\n  console.log('sourceRow', sourceRow);\r\n  // 存储分行以后每一行得出的type数据结构，此时只区分以下type类型\r\n  // p：text文本\r\n  // h1 - h6\r\n  // code：属性中有beginTag，用于去匹配下一个endTag，还有language（标识用的语言）\r\n  // ul：无需列表，子元素为li\r\n  // ol：有序列表，子元素为li\r\n  // table：第一行为表头\r\n  // warp：空白字符串，纯换行用的\r\n  // img：图片标签\r\n  const standNode = [];\r\n  let preNode = {};\r\n  let time = 0;\r\n  FLAG_INDEX.index = 0;\r\n  while (FLAG_INDEX.index < sourceRow.length) {\r\n    console.log(FLAG_INDEX.index, sourceRow[FLAG_INDEX.index]);\r\n    const result = handleRow({\r\n      text: sourceRow[FLAG_INDEX.index],\r\n      preNode,\r\n      sourceRow,\r\n      index: FLAG_INDEX.index,\r\n    });\r\n    if (result) {\r\n      standNode.push(result);\r\n      console.log('standNode', standNode);\r\n    }\r\n    preNode = standNode[standNode.length - 1];\r\n    FLAG_INDEX.index += 1;\r\n    if (FLAG_INDEX.index >= sourceRow.length) break;\r\n    if (time++ > 20) break;\r\n  }\r\n  console.log(standNode);\r\n}\r\n\r\n// br节点\r\nconst brNode = { type: 'br' };\r\n\r\n/* \r\n状态机：\r\ntext的下一个元素是spaceCode，spaceCode变为text\r\ntext后面存在>=2连个空格，下一个如果是text，增加br，否则去除后面的空格\r\n*/\r\n\r\n/**\r\n * @description: 把传入节点转换为text节点；\r\n * @param {*} node\r\n * @return {*} textNode\r\n */\r\nfunction transformToText(node) {\r\n  return {\r\n    type: 'text',\r\n    value: trim(node.value),\r\n    source: node.source,\r\n  };\r\n}\r\n\r\nfunction handleRow(fixedParameter) {\r\n  const { text, preNode = {}, sourceRow, index } = fixedParameter;\r\n  function getNodeData(type, value, extraData = {}, source = text) {\r\n    return {\r\n      type,\r\n      value,\r\n      ...extraData,\r\n      source,\r\n    };\r\n  }\r\n\r\n  let curNode = getNode(text);\r\n  const { type } = curNode;\r\n  console.log('handleRow curRow', curNode);\r\n\r\n  const baseHandle = () => {\r\n    let curNode = getNode(text);\r\n    switch (curNode.type) {\r\n      case 'text':\r\n        curNode.children = [{ ...curNode }];\r\n        break;\r\n      case 'table':\r\n        const result = handleTable(fixedParameter);\r\n        console.log(result);\r\n        if (result) return getNodeData('table', text, result);\r\n        curNode = transformToText(curNode);\r\n        curNode.children = [getNodeData('text', trim(text))];\r\n        break;\r\n      case 'code':\r\n        curNode.children = [];\r\n        break;\r\n      case 'spaceCode':\r\n        curNode.children = [{ ...curNode }];\r\n        break;\r\n      case 'ul':\r\n        // curNode.children = [transformToText(curNode)];\r\n        addLiNode(curNode, transformToText(curNode));\r\n        break;\r\n      case 'ol':\r\n        // curNode.children = [transformToText(curNode)];\r\n        addLiNode(curNode, { ...transformToText(curNode), serial: curNode.matchNum });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return curNode;\r\n  };\r\n\r\n  const addChildren = (node, items) => {\r\n    node.children = items ? (Array.isArray(items) ? [...items] : [items]) : [];\r\n  };\r\n\r\n  // console.log(text, preNode);\r\n  // 前一个元素没有type or type为blank\r\n  if (!preNode.type || preNode.type === 'blank') {\r\n    return baseHandle();\r\n  }\r\n\r\n  // 上一个元素是code\r\n  if (preNode.type === 'code') {\r\n    if (!preNode.children) {\r\n      addChildren(preNode);\r\n    }\r\n    switch (type) {\r\n      /* \r\n        如果也是code，就需要比较和preNode中target能否构成完整的code代码块，\r\n        匹配规则，curNode的target中元素和preNode的target元素一样且长度>=\r\n      */\r\n      case 'code':\r\n        if (\r\n          curNode.tag[0] === preNode.tag[0] &&\r\n          curNode.tag.length >= preNode.tag.length\r\n        ) {\r\n          const nextText = sourceRow[index + 1];\r\n          if (nextText !== undefined) {\r\n            FLAG_INDEX.index += 2;\r\n            return getNode(nextText);\r\n          }\r\n        } else {\r\n          preNode.children.push(curNode);\r\n        }\r\n        break;\r\n      /* 不是代码块直接把元素加入children，渲染时都取soucre */\r\n      default:\r\n        preNode.children.push(curNode);\r\n    }\r\n  }\r\n\r\n  // 上一个元素是Heading\r\n  if (/h[1,2,3,4,5,6]/.test(preNode.type)) {\r\n    return baseHandle();\r\n  }\r\n\r\n  // 上一个元素为text\r\n  if (preNode.type === 'text') {\r\n    if (!preNode.children) addChildren(preNode, { ...preNode });\r\n    const result = handleText(fixedParameter, { getNodeData });\r\n    if (result) return result;\r\n  }\r\n\r\n  // 上一个元素为table\r\n  /* \r\n    判断下一个元素：\r\n    （1）table元素，把数据加到当前table的data上\r\n    （2）text，把text转换成第一列的数值，添加到当前table data上\r\n    （3）其他，返回getNode元素\r\n  */\r\n  if (preNode.type === 'table') {\r\n    switch (type) {\r\n      case 'table':\r\n        handleTable(fixedParameter);\r\n        break;\r\n      case 'text':\r\n        // 如果是text，把text转换为第一列的数值\r\n        handleTable({ ...fixedParameter, text: `|${text}|` });\r\n        break;\r\n      default:\r\n        return curNode;\r\n    }\r\n  }\r\n\r\n  // 上一个元素是spacecode\r\n  if (preNode.type === 'spaceCode') {\r\n    // 判断有没有children\r\n    if (!preNode.children) addChildren(preNode, { ...preNode });\r\n    /* \r\n      判断curNode的类型\r\n      1. spaceCode：把当前spaceCode的value加入preNode的children，合并两个spaceCode\r\n      2. blank：需要判断下面还存不存在spaceCode，存在需要把blank的空字符串加入children\r\n      3. 其他：返回curNode\r\n    */\r\n    switch (type) {\r\n      case 'spaceCode':\r\n        preNode.children.push(curNode);\r\n        break;\r\n      case 'blank':\r\n        let tempIndex = index,\r\n          breakFlag = false,\r\n          brArr = [curNode];\r\n        while (!breakFlag) {\r\n          const nextText = sourceRow[++tempIndex];\r\n          if (nextText !== undefined) {\r\n            const curRowNode = getNode(nextText);\r\n            /* \r\n              1. 找到另外一个spaceCode，把中间的blank都加上\r\n              2. 找到blank，brArr +1\r\n              3. 找到其他元素，不符合合并条件，返回curNode(即当前行的blank元素)\r\n            */\r\n            switch (curRowNode.type) {\r\n              case 'spaceCode':\r\n                for (let i = 0; i < brArr.length; i++) {\r\n                  preNode.children.push(brArr[i]);\r\n                }\r\n                // 把index置位合并到的元素位置\r\n                FLAG_INDEX.index = tempIndex - 1;\r\n                breakFlag = true;\r\n                break;\r\n              case 'blank':\r\n                brArr.push(curRowNode.value);\r\n                break;\r\n              default:\r\n                return curNode;\r\n            }\r\n          } else {\r\n            /* 一直到最后最后一行还没有找到另外一个spaceCode，返回当前blank */\r\n            return curNode;\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        console.log(curNode, 'spaceCode default');\r\n        return curNode;\r\n    }\r\n  }\r\n\r\n  function findLastNode(node) {\r\n    const nodeArr = [];\r\n    function find(node) {\r\n      if (!node.children) return '';\r\n      nodeArr.push(node);\r\n      find(node.children[node.children.length - 1]);\r\n    }\r\n    find(node);\r\n    return nodeArr[nodeArr.length - 1];\r\n  }\r\n  function addListChildren(node, addnode) {\r\n    if (!node.children) node.children = [transformToText(node)];\r\n    if (addnode) node.children.push(addnode);\r\n    return node;\r\n  }\r\n  function addLiNode(node, child) {\r\n    console.log(node, child, '************');\r\n    const LI = { type: 'li', children: [child]};\r\n    if(!node.children) node.children = [];\r\n    node.children.push(LI);\r\n    return node;\r\n  }\r\n  // 上一个元素是ul\r\n  if (preNode.type === 'ul') {\r\n    // ul如果是空字符串会被当做text处理，ol不会\r\n    switch (type) {\r\n      case 'blank':\r\n        return curNode;\r\n      case 'table':\r\n      case 'spaceCode':\r\n        const newNode = transformToText(curNode);\r\n        let lastNode = findLastNode(preNode);\r\n        console.log(lastNode, 'lastnode');\r\n        addListChildren(lastNode, newNode);\r\n        break;\r\n      case 'ul':\r\n        // 先不进行缩进判断\r\n        // 判断是不是空字符串，是的话当做text处理\r\n        if(curNode.children)\r\n        preNode.children.push(addListChildren(curNode));\r\n        break;\r\n      case 'text':\r\n        // 如最后一个ul\r\n        return curNode;\r\n        break;\r\n      default:\r\n        return curNode;\r\n    }\r\n  }\r\n\r\n  // 上一个元素是ol\r\n}\r\n\r\n/**\r\n * @description: 如果当前为table元素且下一个为table的style元素，则合并这两个table元素组成一个table元素，如果上一个元素是table，则把当前table数据加入进去，都不符合条件就给函数外自行处理\r\n * @param {*} fixedParameter\r\n * @return {*}\r\n */\r\nfunction handleTable(fixedParameter) {\r\n  const { text, preNode, sourceRow, index } = fixedParameter;\r\n  const exactNode = getNode(text);\r\n  // 判断还有没有下一个元素\r\n  const nextNode =\r\n    index + 1 < sourceRow.length ? getNode(sourceRow[index + 1]) : {};\r\n  if (preNode.type !== 'table') {\r\n    // 下一个元素是table style样式，和当前table组成正式的table node元素\r\n    if (nextNode.type === 'table' && nextNode.style) {\r\n      // FLAG_INDEX要加1，说明下个元素已经被处理了\r\n      FLAG_INDEX.index += 1;\r\n      return {\r\n        data: [exactNode.data],\r\n        styleArr: nextNode.data,\r\n      };\r\n    }\r\n  } else {\r\n    preNode.data.push(exactNode.data);\r\n  }\r\n}\r\n\r\nfunction textAddText(text, preNode, curNode) {\r\n  console.log(preNode, 'textAddText');\r\n  if (addBr(preNode)) {\r\n    curNode.value = trim(curNode.value);\r\n    curNode.type = 'text';\r\n    preNode.children.push(curNode);\r\n  } else {\r\n    const exactNode = preNode.children[preNode.children.length - 1];\r\n    exactNode.value = exactNode.value + '\\n' + trim(curNode.value);\r\n  }\r\n}\r\n\r\nfunction handleText(fixedParameter, extraParameter) {\r\n  const { text, preNode, sourceRow, index } = fixedParameter;\r\n  const { getNodeData } = extraParameter;\r\n  const curNode = getNode(text);\r\n  const { type } = curNode;\r\n  switch (type) {\r\n    // 如果是blank，返回blank\r\n    case 'blank':\r\n      return curNode;\r\n    // text，spaceCode，把类型定转换成text，br元素的转换等到text文本分析再做处理\r\n    case 'text':\r\n    case 'spaceCode':\r\n    case 'ol':\r\n    case 'ul':\r\n      curNode.type = 'text';\r\n      preNode.children.push(curNode);\r\n      // textAddText(text, preNode, curNode);\r\n      break;\r\n    // table，判断空格，进入table的验证流程\r\n    case 'table':\r\n      const result = handleTable(fixedParameter);\r\n      if (result) return getNodeData('table', text, result);\r\n      curNode.type = 'text';\r\n      preNode.children.push(curNode);\r\n      // textAddText(text, preNode, curNode);\r\n      break;\r\n    default:\r\n      return curNode;\r\n  }\r\n}\r\n\r\nfunction addBr(node) {\r\n  const brReg = /\\s{2,}$/;\r\n  const exactNode = node.children[node.children.length - 1];\r\n  if (brReg.test(exactNode.value)) {\r\n    node.children.push(brNode);\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { transformText };\r\n","E:\\大四上\\react\\react-demo\\src\\pages\\Markdown\\Interpreter\\util.js",[],"E:\\大四上\\react\\react-demo\\src\\pages\\Home\\Header\\index.jsx",["219"],"import React, { Component } from 'react';\r\nimport Search from './search';\r\nimport './index.less';\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    activeLink: 0,\r\n    navList: [\r\n      { value: '首页', path: '/home' },\r\n      { value: '问答', path: '/question' },\r\n    ],\r\n  };\r\n\r\n  linkItemClick = index => {\r\n    const item = this.state.navList[index];\r\n    this.setState({ activeLink: index });\r\n  };\r\n\r\n  render() {\r\n    const { navList, activeLink } = this.state;\r\n\r\n    return (\r\n      <div className=\"USER-HOME-HEADER\">\r\n        <div className=\"main-header\">\r\n          <div className=\"container\">\r\n            <div className=\"nav-list\">\r\n              {navList.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    className={[\r\n                      'link-item',\r\n                      index === activeLink ? 'active-link' : '',\r\n                    ].join(' ')}\r\n                    key={item.value}\r\n                    onClick={() => {\r\n                      this.linkItemClick(index);\r\n                    }}\r\n                  >\r\n                    <span>{item.value}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"searchContainer\">\r\n              <Search />\r\n            </div>\r\n            <div className=\"edit-options\"></div>\r\n            <div className=\"login\"></div>\r\n            <div className=\"user-options\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","E:\\大四上\\react\\react-demo\\src\\pages\\Home\\Header\\search.jsx",[],{"ruleId":"220","severity":1,"message":"221","line":3,"column":3,"nodeType":"222","messageId":"223","endLine":3,"endColumn":7},{"ruleId":"220","severity":1,"message":"224","line":4,"column":3,"nodeType":"222","messageId":"223","endLine":4,"endColumn":8},{"ruleId":"220","severity":1,"message":"225","line":5,"column":3,"nodeType":"222","messageId":"223","endLine":5,"endColumn":11},{"ruleId":"220","severity":1,"message":"226","line":6,"column":3,"nodeType":"222","messageId":"223","endLine":6,"endColumn":9},{"ruleId":"220","severity":1,"message":"227","line":7,"column":3,"nodeType":"222","messageId":"223","endLine":7,"endColumn":10},{"ruleId":"220","severity":1,"message":"228","line":8,"column":3,"nodeType":"222","messageId":"223","endLine":8,"endColumn":13},{"ruleId":"220","severity":1,"message":"229","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":20},{"ruleId":"220","severity":1,"message":"230","line":17,"column":8,"nodeType":"222","messageId":"223","endLine":17,"endColumn":12},{"ruleId":"220","severity":1,"message":"231","line":18,"column":8,"nodeType":"222","messageId":"223","endLine":18,"endColumn":13},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"232","replacedBy":"236"},{"ruleId":"234","replacedBy":"237"},{"ruleId":"232","replacedBy":"238"},{"ruleId":"234","replacedBy":"239"},{"ruleId":"220","severity":1,"message":"240","line":28,"column":19,"nodeType":"222","messageId":"223","endLine":28,"endColumn":27},{"ruleId":"232","replacedBy":"241"},{"ruleId":"234","replacedBy":"242"},{"ruleId":"220","severity":1,"message":"243","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":13},{"ruleId":"220","severity":1,"message":"244","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":16},{"ruleId":"220","severity":1,"message":"245","line":5,"column":10,"nodeType":"222","messageId":"223","endLine":5,"endColumn":16},{"ruleId":"220","severity":1,"message":"246","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":19},{"ruleId":"220","severity":1,"message":"247","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":21},{"ruleId":"220","severity":1,"message":"246","line":3,"column":24,"nodeType":"222","messageId":"223","endLine":3,"endColumn":33},{"ruleId":"232","replacedBy":"248"},{"ruleId":"234","replacedBy":"249"},{"ruleId":"220","severity":1,"message":"250","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":12},{"ruleId":"251","severity":1,"message":"252","line":15,"column":32,"nodeType":"253","messageId":"254","endLine":15,"endColumn":33},{"ruleId":"251","severity":1,"message":"252","line":15,"column":39,"nodeType":"253","messageId":"254","endLine":15,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":15,"column":42,"nodeType":"257","messageId":"258","endLine":15,"endColumn":43,"suggestions":"259"},{"ruleId":"220","severity":1,"message":"260","line":27,"column":10,"nodeType":"222","messageId":"223","endLine":27,"endColumn":14},{"ruleId":"220","severity":1,"message":"261","line":35,"column":7,"nodeType":"222","messageId":"223","endLine":35,"endColumn":11},{"ruleId":"220","severity":1,"message":"262","line":40,"column":10,"nodeType":"222","messageId":"223","endLine":40,"endColumn":22},{"ruleId":"263","severity":1,"message":"264","line":283,"column":9,"nodeType":"265","messageId":"266","endLine":283,"endColumn":15},{"ruleId":"220","severity":1,"message":"267","line":318,"column":10,"nodeType":"222","messageId":"223","endLine":318,"endColumn":21},{"ruleId":"220","severity":1,"message":"268","line":331,"column":26,"nodeType":"222","messageId":"223","endLine":331,"endColumn":35},{"ruleId":"220","severity":1,"message":"269","line":331,"column":37,"nodeType":"222","messageId":"223","endLine":331,"endColumn":42},{"ruleId":"220","severity":1,"message":"270","line":15,"column":11,"nodeType":"222","messageId":"223","endLine":15,"endColumn":15},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","'PrivateRoute' is defined but never used.","'Home' is defined but never used.","'About' is defined but never used.","no-native-reassign",["271"],"no-negated-in-lhs",["272"],["271"],["272"],["271"],["272"],"'newTodos' is assigned a value but never used.",["271"],["272"],"'Login' is defined but never used.","'Markdown' is defined but never used.","'Button' is defined but never used.","'adminRole' is defined but never used.","'ReactMarkdown' is defined but never used.",["271"],["272"],"'Lazy' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-useless-escape","Unnecessary escape character: \\*.","Literal","unnecessaryEscape",["273","274"],"'Root' is defined but never used.","'Text' is defined but never used.","'TextRenderer' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'textAddText' is defined but never used.","'sourceRow' is assigned a value but never used.","'index' is assigned a value but never used.","'item' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"275","fix":"276","desc":"277"},{"messageId":"278","fix":"279","desc":"280"},"removeEscape",{"range":"281","text":"282"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"283","text":"284"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[481,482],"",[481,481],"\\"]